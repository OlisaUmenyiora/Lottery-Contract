{"abi": [{"inputs": [{"internalType": "address", "name": "_priceFeedAddress", "type": "address"}, {"internalType": "address", "name": "_vrfCoordinator", "type": "address"}, {"internalType": "address", "name": "_link", "type": "address"}, {"internalType": "uint256", "name": "_fee", "type": "uint256"}, {"internalType": "bytes32", "name": "_keyhash", "type": "bytes32"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "requestId", "type": "bytes32"}], "name": "RequestedRandomness", "type": "event"}, {"inputs": [], "name": "endLottery", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "enter", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [], "name": "fee", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "getEntranceFee", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "keyhash", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "lottery_state", "outputs": [{"internalType": "enum Lottery.LOTTERY_STATE", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "players", "outputs": [{"internalType": "address payable", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "randomness", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "requestId", "type": "bytes32"}, {"internalType": "uint256", "name": "randomness", "type": "uint256"}], "name": "rawFulfillRandomness", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "recentWinner", "outputs": [{"internalType": "address payable", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "startLottery", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "usdEntryFee", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "C:/Users/oly/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol", "1": "C:/Users/oly/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol", "2": "C:/Users/oly/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFConsumerBase.sol", "3": "C:/Users/oly/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFRequestIDBase.sol", "4": "C:/Users/oly/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "5": "C:/Users/oly/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/interfaces/LinkTokenInterface.sol", "6": "contracts/Lottery.sol"}, "ast": {"absolutePath": "contracts/Lottery.sol", "exportedSymbols": {"AggregatorV3Interface": [525], "Context": [547], "LinkTokenInterface": [692], "Lottery": [253], "Ownable": [358], "VRFConsumerBase": [479], "VRFRequestIDBase": [597]}, "id": 254, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "31:22:6"}, {"absolutePath": "C:/Users/oly/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol", "id": 2, "nodeType": "ImportDirective", "scope": 254, "sourceUnit": 526, "src": "55:76:6", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/oly/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 3, "nodeType": "ImportDirective", "scope": 254, "sourceUnit": 359, "src": "133:52:6", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "C:/Users/oly/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFConsumerBase.sol", "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol", "id": 4, "nodeType": "ImportDirective", "scope": 254, "sourceUnit": 480, "src": "186:59:6", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 5, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 479, "src": "267:15:6"}, "id": 6, "nodeType": "InheritanceSpecifier", "src": "267:15:6"}, {"baseName": {"id": 7, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 358, "src": "284:7:6"}, "id": 8, "nodeType": "InheritanceSpecifier", "src": "284:7:6"}], "contractDependencies": [358, 479, 547, 597], "contractKind": "contract", "fullyImplemented": true, "id": 253, "linearizedBaseContracts": [253, 358, 547, 479, 597], "name": "Lottery", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "f71d96cb", "id": 11, "mutability": "mutable", "name": "players", "nodeType": "VariableDeclaration", "scope": 253, "src": "298:32:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage", "typeString": "address payable[]"}, "typeName": {"baseType": {"id": 9, "name": "address", "nodeType": "ElementaryTypeName", "src": "298:15:6", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 10, "nodeType": "ArrayTypeName", "src": "298:17:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr", "typeString": "address payable[]"}}, "visibility": "public"}, {"constant": false, "functionSelector": "4f8c70cf", "id": 13, "mutability": "mutable", "name": "recentWinner", "nodeType": "VariableDeclaration", "scope": 253, "src": "336:35:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 12, "name": "address", "nodeType": "ElementaryTypeName", "src": "336:15:6", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "public"}, {"constant": false, "functionSelector": "88ab139a", "id": 15, "mutability": "mutable", "name": "usdEntryFee", "nodeType": "VariableDeclaration", "scope": 253, "src": "377:26:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 14, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "377:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "36013189", "id": 17, "mutability": "mutable", "name": "randomness", "nodeType": "VariableDeclaration", "scope": 253, "src": "409:25:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 16, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "409:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "id": 20, "mutability": "mutable", "name": "ethUsdPriceFeed", "nodeType": "VariableDeclaration", "scope": 253, "src": "440:46:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$525", "typeString": "contract AggregatorV3Interface"}, "typeName": {"id": 19, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 18, "name": "AggregatorV3Interface", "nodeType": "IdentifierPath", "referencedDeclaration": 525, "src": "440:21:6"}, "referencedDeclaration": 525, "src": "440:21:6", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$525", "typeString": "contract AggregatorV3Interface"}}, "visibility": "internal"}, {"canonicalName": "Lottery.LOTTERY_STATE", "id": 24, "members": [{"id": 21, "name": "OPEN", "nodeType": "EnumValue", "src": "521:4:6"}, {"id": 22, "name": "CLOSED", "nodeType": "EnumValue", "src": "535:6:6"}, {"id": 23, "name": "CALCULATING_WINNER", "nodeType": "EnumValue", "src": "551:18:6"}], "name": "LOTTERY_STATE", "nodeType": "EnumDefinition", "src": "492:83:6"}, {"constant": false, "functionSelector": "81447999", "id": 27, "mutability": "mutable", "name": "lottery_state", "nodeType": "VariableDeclaration", "scope": 253, "src": "580:34:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}, "typeName": {"id": 26, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 25, "name": "LOTTERY_STATE", "nodeType": "IdentifierPath", "referencedDeclaration": 24, "src": "580:13:6"}, "referencedDeclaration": 24, "src": "580:13:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "visibility": "public"}, {"constant": false, "functionSelector": "ddca3f43", "id": 29, "mutability": "mutable", "name": "fee", "nodeType": "VariableDeclaration", "scope": 253, "src": "620:18:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 28, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "620:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "69ebe78e", "id": 31, "mutability": "mutable", "name": "keyhash", "nodeType": "VariableDeclaration", "scope": 253, "src": "644:22:6", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 30, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "644:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"anonymous": false, "id": 35, "name": "RequestedRandomness", "nodeType": "EventDefinition", "parameters": {"id": 34, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 33, "indexed": false, "mutability": "mutable", "name": "requestId", "nodeType": "VariableDeclaration", "scope": 35, "src": "698:17:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 32, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "698:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "697:19:6"}, "src": "672:45:6"}, {"body": {"id": 80, "nodeType": "Block", "src": "927:206:6", "statements": [{"expression": {"id": 59, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 52, "name": "usdEntryFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "937:11:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_rational_50000000000000000000_by_1", "typeString": "int_const 50000000000000000000"}, "id": 58, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3530", "id": 53, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "951:2:6", "typeDescriptions": {"typeIdentifier": "t_rational_50_by_1", "typeString": "int_const 50"}, "value": "50"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 56, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 54, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "957:2:6", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 55, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "961:2:6", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "957:6:6", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}], "id": 57, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "956:8:6", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "951:13:6", "typeDescriptions": {"typeIdentifier": "t_rational_50000000000000000000_by_1", "typeString": "int_const 50000000000000000000"}}, "src": "937:27:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 60, "nodeType": "ExpressionStatement", "src": "937:27:6"}, {"expression": {"id": 65, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 61, "name": "ethUsdPriceFeed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20, "src": "974:15:6", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$525", "typeString": "contract AggregatorV3Interface"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 63, "name": "_priceFeedAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "1014:17:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 62, "name": "AggregatorV3Interface", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 525, "src": "992:21:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$525_$", "typeString": "type(contract AggregatorV3Interface)"}}, "id": 64, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "992:40:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$525", "typeString": "contract AggregatorV3Interface"}}, "src": "974:58:6", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$525", "typeString": "contract AggregatorV3Interface"}}, "id": 66, "nodeType": "ExpressionStatement", "src": "974:58:6"}, {"expression": {"id": 70, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 67, "name": "lottery_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "1042:13:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 68, "name": "LOTTERY_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "1058:13:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$24_$", "typeString": "type(enum Lottery.LOTTERY_STATE)"}}, "id": 69, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CLOSED", "nodeType": "MemberAccess", "src": "1058:20:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "src": "1042:36:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "id": 71, "nodeType": "ExpressionStatement", "src": "1042:36:6"}, {"expression": {"id": 74, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 72, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "1088:3:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 73, "name": "_fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "1094:4:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1088:10:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 75, "nodeType": "ExpressionStatement", "src": "1088:10:6"}, {"expression": {"id": 78, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 76, "name": "keyhash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "1108:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 77, "name": "_keyhash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 45, "src": "1118:8:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "1108:18:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 79, "nodeType": "ExpressionStatement", "src": "1108:18:6"}]}, "id": 81, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 48, "name": "_vrfCoordinator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "903:15:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 49, "name": "_link", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 41, "src": "920:5:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 50, "modifierName": {"id": 47, "name": "VRFConsumerBase", "nodeType": "IdentifierPath", "referencedDeclaration": 479, "src": "887:15:6"}, "nodeType": "ModifierInvocation", "src": "887:39:6"}], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 46, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 37, "mutability": "mutable", "name": "_priceFeedAddress", "nodeType": "VariableDeclaration", "scope": 81, "src": "744:25:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 36, "name": "address", "nodeType": "ElementaryTypeName", "src": "744:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 39, "mutability": "mutable", "name": "_vrfCoordinator", "nodeType": "VariableDeclaration", "scope": 81, "src": "779:23:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 38, "name": "address", "nodeType": "ElementaryTypeName", "src": "779:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 41, "mutability": "mutable", "name": "_link", "nodeType": "VariableDeclaration", "scope": 81, "src": "812:13:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 40, "name": "address", "nodeType": "ElementaryTypeName", "src": "812:7:6", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 43, "mutability": "mutable", "name": "_fee", "nodeType": "VariableDeclaration", "scope": 81, "src": "835:12:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 42, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "835:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 45, "mutability": "mutable", "name": "_keyhash", "nodeType": "VariableDeclaration", "scope": 81, "src": "857:16:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 44, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "857:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "734:145:6"}, "returnParameters": {"id": 51, "nodeType": "ParameterList", "parameters": [], "src": "927:0:6"}, "scope": 253, "src": "723:410:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 110, "nodeType": "Block", "src": "1171:171:6", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}, "id": 88, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 85, "name": "lottery_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "1189:13:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 86, "name": "LOTTERY_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "1206:13:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$24_$", "typeString": "type(enum Lottery.LOTTERY_STATE)"}}, "id": 87, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "OPEN", "nodeType": "MemberAccess", "src": "1206:18:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "src": "1189:35:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 84, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1181:7:6", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 89, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1181:44:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 90, "nodeType": "ExpressionStatement", "src": "1181:44:6"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 96, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 92, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1243:3:6", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 93, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "1243:9:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 94, "name": "getEntranceFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 147, "src": "1256:14:6", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 95, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1256:16:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1243:29:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f7420656e6f7567682045544821", "id": 97, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1274:17:6", "typeDescriptions": {"typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de", "typeString": "literal_string \"Not enough ETH!\""}, "value": "Not enough ETH!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de", "typeString": "literal_string \"Not enough ETH!\""}], "id": 91, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1235:7:6", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 98, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1235:57:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 99, "nodeType": "ExpressionStatement", "src": "1235:57:6"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 105, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1323:3:6", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 106, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1323:10:6", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 104, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1315:8:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 103, "name": "address", "nodeType": "ElementaryTypeName", "src": "1315:8:6", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 107, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1315:19:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}], "expression": {"id": 100, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11, "src": "1302:7:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage", "typeString": "address payable[] storage ref"}}, "id": 102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "1302:12:6", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$", "typeString": "function (address payable)"}}, "id": 108, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1302:33:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 109, "nodeType": "ExpressionStatement", "src": "1302:33:6"}]}, "functionSelector": "e97dcb62", "id": 111, "implemented": true, "kind": "function", "modifiers": [], "name": "enter", "nodeType": "FunctionDefinition", "parameters": {"id": 82, "nodeType": "ParameterList", "parameters": [], "src": "1153:2:6"}, "returnParameters": {"id": 83, "nodeType": "ParameterList", "parameters": [], "src": "1171:0:6"}, "scope": 253, "src": "1139:203:6", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 146, "nodeType": "Block", "src": "1404:230:6", "statements": [{"assignments": [null, 117, null, null, null], "declarations": [null, {"constant": false, "id": 117, "mutability": "mutable", "name": "price", "nodeType": "VariableDeclaration", "scope": 146, "src": "1417:12:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 116, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1417:6:6", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, null, null, null], "id": 121, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 118, "name": "ethUsdPriceFeed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20, "src": "1439:15:6", "typeDescriptions": {"typeIdentifier": "t_contract$_AggregatorV3Interface_$525", "typeString": "contract AggregatorV3Interface"}}, "id": 119, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "latestRoundData", "nodeType": "MemberAccess", "referencedDeclaration": 524, "src": "1439:31:6", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$", "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"}}, "id": 120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1439:33:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$", "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"}}, "nodeType": "VariableDeclarationStatement", "src": "1414:58:6"}, {"assignments": [123], "declarations": [{"constant": false, "id": 123, "mutability": "mutable", "name": "adjustedPrice", "nodeType": "VariableDeclaration", "scope": 146, "src": "1482:21:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 122, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1482:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 132, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 126, "name": "price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "1514:5:6", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 125, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1506:7:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 124, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1506:7:6", "typeDescriptions": {}}}, "id": 127, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1506:14:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_10000000000_by_1", "typeString": "int_const 10000000000"}, "id": 130, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 128, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1523:2:6", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3130", "id": 129, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1527:2:6", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "1523:6:6", "typeDescriptions": {"typeIdentifier": "t_rational_10000000000_by_1", "typeString": "int_const 10000000000"}}, "src": "1506:23:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1482:47:6"}, {"assignments": [134], "declarations": [{"constant": false, "id": 134, "mutability": "mutable", "name": "costToEnter", "nodeType": "VariableDeclaration", "scope": 146, "src": "1539:19:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 133, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1539:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 143, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 142, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 139, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 135, "name": "usdEntryFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "1562:11:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 138, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 136, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1576:2:6", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 137, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1580:2:6", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "1576:6:6", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "1562:20:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 140, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1561:22:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 141, "name": "adjustedPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 123, "src": "1586:13:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1561:38:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1539:60:6"}, {"expression": {"id": 144, "name": "costToEnter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 134, "src": "1616:11:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 115, "id": 145, "nodeType": "Return", "src": "1609:18:6"}]}, "functionSelector": "09bc33a7", "id": 147, "implemented": true, "kind": "function", "modifiers": [], "name": "getEntranceFee", "nodeType": "FunctionDefinition", "parameters": {"id": 112, "nodeType": "ParameterList", "parameters": [], "src": "1371:2:6"}, "returnParameters": {"id": 115, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 114, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 147, "src": "1395:7:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1395:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1394:9:6"}, "scope": 253, "src": "1348:286:6", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 165, "nodeType": "Block", "src": "1681:171:6", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}, "id": 156, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 153, "name": "lottery_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "1712:13:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 154, "name": "LOTTERY_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "1729:13:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$24_$", "typeString": "type(enum Lottery.LOTTERY_STATE)"}}, "id": 155, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CLOSED", "nodeType": "MemberAccess", "src": "1729:20:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "src": "1712:37:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e27742073746172742061206c6f74746572792079657421", "id": 157, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1763:28:6", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7652800e04f562bdf3a36a51feec18308573d114153ef63e9c9dbaf638fd5fd3", "typeString": "literal_string \"Can't start a lottery yet!\""}, "value": "Can't start a lottery yet!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7652800e04f562bdf3a36a51feec18308573d114153ef63e9c9dbaf638fd5fd3", "typeString": "literal_string \"Can't start a lottery yet!\""}], "id": 152, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1691:7:6", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 158, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1691:110:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 159, "nodeType": "ExpressionStatement", "src": "1691:110:6"}, {"expression": {"id": 163, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 160, "name": "lottery_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "1811:13:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 161, "name": "LOTTERY_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "1827:13:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$24_$", "typeString": "type(enum Lottery.LOTTERY_STATE)"}}, "id": 162, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "OPEN", "nodeType": "MemberAccess", "src": "1827:18:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "src": "1811:34:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "id": 164, "nodeType": "ExpressionStatement", "src": "1811:34:6"}]}, "functionSelector": "160344e2", "id": 166, "implemented": true, "kind": "function", "modifiers": [{"id": 150, "modifierName": {"id": 149, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 300, "src": "1671:9:6"}, "nodeType": "ModifierInvocation", "src": "1671:9:6"}], "name": "startLottery", "nodeType": "FunctionDefinition", "parameters": {"id": 148, "nodeType": "ParameterList", "parameters": [], "src": "1661:2:6"}, "returnParameters": {"id": 151, "nodeType": "ParameterList", "parameters": [], "src": "1681:0:6"}, "scope": 253, "src": "1640:212:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 187, "nodeType": "Block", "src": "1897:171:6", "statements": [{"expression": {"id": 174, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 171, "name": "lottery_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "1907:13:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 172, "name": "LOTTERY_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "1923:13:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$24_$", "typeString": "type(enum Lottery.LOTTERY_STATE)"}}, "id": 173, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CALCULATING_WINNER", "nodeType": "MemberAccess", "src": "1923:32:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "src": "1907:48:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "id": 175, "nodeType": "ExpressionStatement", "src": "1907:48:6"}, {"assignments": [177], "declarations": [{"constant": false, "id": 177, "mutability": "mutable", "name": "requestId", "nodeType": "VariableDeclaration", "scope": 187, "src": "1965:17:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 176, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1965:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 182, "initialValue": {"arguments": [{"id": 179, "name": "keyhash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "2003:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 180, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 29, "src": "2012:3:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 178, "name": "requestRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 429, "src": "1985:17:6", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (bytes32,uint256) returns (bytes32)"}}, "id": 181, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1985:31:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "1965:51:6"}, {"eventCall": {"arguments": [{"id": 184, "name": "requestId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 177, "src": "2051:9:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 183, "name": "RequestedRandomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "2031:19:6", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 185, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2031:30:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 186, "nodeType": "EmitStatement", "src": "2026:35:6"}]}, "functionSelector": "1593a8c7", "id": 188, "implemented": true, "kind": "function", "modifiers": [{"id": 169, "modifierName": {"id": 168, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 300, "src": "1887:9:6"}, "nodeType": "ModifierInvocation", "src": "1887:9:6"}], "name": "endLottery", "nodeType": "FunctionDefinition", "parameters": {"id": 167, "nodeType": "ParameterList", "parameters": [], "src": "1877:2:6"}, "returnParameters": {"id": 170, "nodeType": "ParameterList", "parameters": [], "src": "1897:0:6"}, "scope": 253, "src": "1858:210:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [373], "body": {"id": 251, "nodeType": "Block", "src": "2180:475:6", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}, "id": 200, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 197, "name": "lottery_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "2211:13:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 198, "name": "LOTTERY_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "2228:13:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$24_$", "typeString": "type(enum Lottery.LOTTERY_STATE)"}}, "id": 199, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CALCULATING_WINNER", "nodeType": "MemberAccess", "src": "2228:32:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "src": "2211:49:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f75206172656e27742074686572652079657421", "id": 201, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2274:23:6", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2", "typeString": "literal_string \"You aren't there yet!\""}, "value": "You aren't there yet!"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ebed60e6ebf2400e4430d0985d24c02f3c826e0c61c732017b1cc0d5c6a3adb2", "typeString": "literal_string \"You aren't there yet!\""}], "id": 196, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2190:7:6", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 202, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2190:117:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 203, "nodeType": "ExpressionStatement", "src": "2190:117:6"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 207, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 205, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 192, "src": "2325:11:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 206, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2339:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2325:15:6", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "72616e646f6d5f6e6f745f666f756e64", "id": 208, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2342:18:6", "typeDescriptions": {"typeIdentifier": "t_stringliteral_13499e8fcd5e9f15947635d04751299bebfd96234f34994ddd5da6ea62d3e798", "typeString": "literal_string \"random_not_found\""}, "value": "random_not_found"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_13499e8fcd5e9f15947635d04751299bebfd96234f34994ddd5da6ea62d3e798", "typeString": "literal_string \"random_not_found\""}], "id": 204, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2317:7:6", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 209, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2317:44:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 210, "nodeType": "ExpressionStatement", "src": "2317:44:6"}, {"assignments": [212], "declarations": [{"constant": false, "id": 212, "mutability": "mutable", "name": "indexOfWinner", "nodeType": "VariableDeclaration", "scope": 251, "src": "2371:21:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 211, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2371:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 217, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 213, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 192, "src": "2395:11:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"expression": {"id": 214, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11, "src": "2409:7:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage", "typeString": "address payable[] storage ref"}}, "id": 215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2409:14:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2395:28:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2371:52:6"}, {"expression": {"id": 222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 218, "name": "recentWinner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "2433:12:6", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 219, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11, "src": "2448:7:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage", "typeString": "address payable[] storage ref"}}, "id": 221, "indexExpression": {"id": 220, "name": "indexOfWinner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 212, "src": "2456:13:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2448:22:6", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "2433:37:6", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 223, "nodeType": "ExpressionStatement", "src": "2433:37:6"}, {"expression": {"arguments": [{"expression": {"arguments": [{"id": 229, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2510:4:6", "typeDescriptions": {"typeIdentifier": "t_contract$_Lottery_$253", "typeString": "contract Lottery"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Lottery_$253", "typeString": "contract Lottery"}], "id": 228, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2502:7:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 227, "name": "address", "nodeType": "ElementaryTypeName", "src": "2502:7:6", "typeDescriptions": {}}}, "id": 230, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2502:13:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "2502:21:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 224, "name": "recentWinner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "2480:12:6", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 226, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "2480:21:6", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 232, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2480:44:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 233, "nodeType": "ExpressionStatement", "src": "2480:44:6"}, {"expression": {"id": 240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 234, "name": "players", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11, "src": "2534:7:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage", "typeString": "address payable[] storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "30", "id": 238, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2566:1:6", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 237, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "2544:21:6", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address payable[] memory)"}, "typeName": {"baseType": {"id": 235, "name": "address", "nodeType": "ElementaryTypeName", "src": "2548:15:6", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 236, "nodeType": "ArrayTypeName", "src": "2548:17:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr", "typeString": "address payable[]"}}}, "id": 239, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2544:24:6", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr", "typeString": "address payable[] memory"}}, "src": "2534:34:6", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage", "typeString": "address payable[] storage ref"}}, "id": 241, "nodeType": "ExpressionStatement", "src": "2534:34:6"}, {"expression": {"id": 245, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 242, "name": "lottery_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 27, "src": "2578:13:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 243, "name": "LOTTERY_STATE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "2594:13:6", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$24_$", "typeString": "type(enum Lottery.LOTTERY_STATE)"}}, "id": 244, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "CLOSED", "nodeType": "MemberAccess", "src": "2594:20:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "src": "2578:36:6", "typeDescriptions": {"typeIdentifier": "t_enum$_LOTTERY_STATE_$24", "typeString": "enum Lottery.LOTTERY_STATE"}}, "id": 246, "nodeType": "ExpressionStatement", "src": "2578:36:6"}, {"expression": {"id": 249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 247, "name": "randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 17, "src": "2624:10:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 248, "name": "_randomness", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 192, "src": "2637:11:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2624:24:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 250, "nodeType": "ExpressionStatement", "src": "2624:24:6"}]}, "id": 252, "implemented": true, "kind": "function", "modifiers": [], "name": "fulfillRandomness", "nodeType": "FunctionDefinition", "overrides": {"id": 194, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2167:8:6"}, "parameters": {"id": 193, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 190, "mutability": "mutable", "name": "_requestId", "nodeType": "VariableDeclaration", "scope": 252, "src": "2101:18:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 189, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2101:7:6", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 192, "mutability": "mutable", "name": "_randomness", "nodeType": "VariableDeclaration", "scope": 252, "src": "2121:19:6", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 191, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2121:7:6", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2100:41:6"}, "returnParameters": {"id": 195, "nodeType": "ParameterList", "parameters": [], "src": "2180:0:6"}, "scope": 253, "src": "2074:581:6", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 254, "src": "247:2410:6"}], "src": "31:2627:6"}, "bytecode": "", "bytecodeSha1": "5200bff552d90e8911b2949c74afae62ccdc7b66", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.0+commit.c7dfd78e"}, "contractName": "Lottery", "coverageMap": {"branches": {"0": {"Ownable.transferOwnership": {"33": [1248, 1271, true], "34": [2006, 2028, true]}}, "1": {}, "2": {"VRFConsumerBase.rawFulfillRandomness": {"35": [9668, 9696, true]}}, "3": {}, "4": {}, "5": {}, "6": {"Lottery.enter": {"29": [1189, 1224, true], "30": [1243, 1272, true]}, "Lottery.fulfillRandomness": {"31": [2211, 2260, true], "32": [2325, 2340, true]}, "Lottery.startLottery": {"28": [1712, 1749, true]}}}, "statements": {"0": {"Ownable._transferOwnership": {"17": [2378, 2395], "18": [2405, 2450]}, "Ownable.owner": {"5": [1101, 1114]}, "Ownable.renounceOwnership": {"4": [1732, 1762]}, "Ownable.transferOwnership": {"11": [1998, 2071], "12": [2081, 2109]}}, "1": {"Context._msgSender": {"13": [712, 729]}}, "2": {"VRFConsumerBase.rawFulfillRandomness": {"6": [9660, 9732], "7": [9738, 9778]}, "VRFConsumerBase.requestRandomness": {"14": [7834, 7921], "15": [8663, 8702], "16": [8708, 8747]}}, "3": {"VRFRequestIDBase.makeRequestId": {"27": [1518, 1577]}, "VRFRequestIDBase.makeVRFInputSeed": {"26": [953, 1031]}}, "4": {}, "5": {}, "6": {"Lottery.endLottery": {"0": [1907, 1955], "1": [2026, 2061]}, "Lottery.enter": {"8": [1181, 1225], "9": [1235, 1292], "10": [1302, 1335]}, "Lottery.fulfillRandomness": {"19": [2190, 2307], "20": [2317, 2361], "21": [2433, 2470], "22": [2480, 2524], "23": [2534, 2568], "24": [2578, 2614], "25": [2624, 2648]}, "Lottery.startLottery": {"2": [1691, 1801], "3": [1811, 1845]}}}}, "dependencies": ["smartcontractkit/chainlink-brownie-contracts@0.4.0/AggregatorV3Interface", "OpenZeppelin/openzeppelin-contracts@4.5.0/Context", "smartcontractkit/chainlink-brownie-contracts@0.4.0/LinkTokenInterface", "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable", "smartcontractkit/chainlink-brownie-contracts@0.4.0/VRFConsumerBase", "smartcontractkit/chainlink-brownie-contracts@0.4.0/VRFRequestIDBase"], "deployedBytecode": "6080604052600436106100e85760003560e01c8063814479991161008a578063ddca3f4311610059578063ddca3f4314610211578063e97dcb6214610226578063f2fde38b1461022e578063f71d96cb1461024e576100e8565b806381447999146101a557806388ab139a146101c75780638da5cb5b146101dc57806394985ddd146101f1576100e8565b806336013189116100c657806336013189146101445780634f8c70cf1461015957806369ebe78e1461017b578063715018a614610190576100e8565b806309bc33a7146100ed5780631593a8c714610118578063160344e21461012f575b600080fd5b3480156100f957600080fd5b5061010261026e565b60405161010f9190610bd5565b60405180910390f35b34801561012457600080fd5b5061012d61033d565b005b34801561013b57600080fd5b5061012d6103e6565b34801561015057600080fd5b5061010261047f565b34801561016557600080fd5b5061016e610485565b60405161010f9190610b57565b34801561018757600080fd5b50610102610494565b34801561019c57600080fd5b5061012d61049a565b3480156101b157600080fd5b506101ba6104e5565b60405161010f9190610c02565b3480156101d357600080fd5b506101026104f5565b3480156101e857600080fd5b5061016e6104fb565b3480156101fd57600080fd5b5061012d61020c366004610ac1565b61050a565b34801561021d57600080fd5b50610102610560565b61012d610566565b34801561023a57600080fd5b5061012d610249366004610a73565b610609565b34801561025a57600080fd5b5061016e610269366004610ae2565b61067a565b600080600660009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156102bf57600080fd5b505afa1580156102d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f79190610afa565b5050509150506000816402540be4006103109190610dc1565b9050600081600454670de0b6b3a764000061032b9190610dc1565b6103359190610dad565b935050505090565b6103456106a4565b6001600160a01b03166103566104fb565b6001600160a01b0316146103855760405162461bcd60e51b815260040161037c90610cfa565b60405180910390fd5b6006805460ff60a01b1916600160a11b1790556008546007546000916103aa916106a8565b90507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e816040516103db9190610bd5565b60405180910390a150565b6103ee6106a4565b6001600160a01b03166103ff6104fb565b6001600160a01b0316146104255760405162461bcd60e51b815260040161037c90610cfa565b6001600654600160a01b900460ff16600281111561045357634e487b7160e01b600052602160045260246000fd5b146104705760405162461bcd60e51b815260040161037c90610cc3565b6006805460ff60a01b19169055565b60055481565b6003546001600160a01b031681565b60085481565b6104a26106a4565b6001600160a01b03166104b36104fb565b6001600160a01b0316146104d95760405162461bcd60e51b815260040161037c90610cfa565b6104e360006107ee565b565b600654600160a01b900460ff1681565b60045481565b6001546001600160a01b031690565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105525760405162461bcd60e51b815260040161037c90610d2f565b61055c8282610840565b5050565b60075481565b6000600654600160a01b900460ff16600281111561059457634e487b7160e01b600052602160045260246000fd5b1461059e57600080fd5b6105a661026e565b3410156105c55760405162461bcd60e51b815260040161037c90610c54565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191633179055565b6106116106a4565b6001600160a01b03166106226104fb565b6001600160a01b0316146106485760405162461bcd60e51b815260040161037c90610cfa565b6001600160a01b03811661066e5760405162461bcd60e51b815260040161037c90610c7d565b610677816107ee565b50565b6002818154811061068a57600080fd5b6000918252602090912001546001600160a01b0316905081565b3390565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200161070f929190610b49565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161073c93929190610b6b565b602060405180830381600087803b15801561075657600080fd5b505af115801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190610aa1565b5060006107b0846000306000808981526020019081526020016000205461096d565b6000858152602081905260409020549091506107cd906001610d95565b6000858152602081905260409020556107e684826109a7565b949350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600654600160a01b900460ff16600281111561086e57634e487b7160e01b600052602160045260246000fd5b1461088b5760405162461bcd60e51b815260040161037c90610d66565b600081116108ab5760405162461bcd60e51b815260040161037c90610c2a565b6002546000906108bb9083610de0565b9050600281815481106108de57634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600380546001600160a01b0319166001600160a01b0392831617908190556040519116914780156108fc02929091818181858888f19350505050158015610934573d6000803e3d6000fd5b506040805160008152602081019182905251610952916002916109da565b50506006805460ff60a01b1916600160a01b17905560055550565b6000848484846040516020016109869493929190610bde565b60408051601f19818403018152919052805160209091012095945050505050565b600082826040516020016109bc929190610b49565b60405160208183030381529060405280519060200120905092915050565b828054828255906000526020600020908101928215610a2f579160200282015b82811115610a2f57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906109fa565b50610a3b929150610a3f565b5090565b5b80821115610a3b5760008155600101610a40565b805169ffffffffffffffffffff81168114610a6e57600080fd5b919050565b600060208284031215610a84578081fd5b81356001600160a01b0381168114610a9a578182fd5b9392505050565b600060208284031215610ab2578081fd5b81518015158114610a9a578182fd5b60008060408385031215610ad3578081fd5b50508035926020909101359150565b600060208284031215610af3578081fd5b5035919050565b600080600080600060a08688031215610b11578081fd5b610b1a86610a54565b9450602086015193506040860151925060608601519150610b3d60808701610a54565b90509295509295909350565b918252602082015260400190565b6001600160a01b0391909116815260200190565b600060018060a01b038516825260208481840152606060408401528351806060850152825b81811015610bac57858101830151858201608001528201610b90565b81811115610bbd5783608083870101525b50601f01601f19169290920160800195945050505050565b90815260200190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b6020810160038310610c2457634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526010908201526f1c985b991bdb57db9bdd17d99bdd5b9960821b604082015260600190565b6020808252600f908201526e4e6f7420656e6f756768204554482160881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601a908201527f43616e27742073746172742061206c6f74746572792079657421000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604082015260600190565b602080825260159082015274596f75206172656e2774207468657265207965742160581b604082015260600190565b60008219821115610da857610da8610df4565b500190565b600082610dbc57610dbc610e0a565b500490565b6000816000190483118215151615610ddb57610ddb610df4565b500290565b600082610def57610def610e0a565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212204e7afe0e885582f2d1319cb17e25be2c5325d178540f5cef094f6cebf78c11db64736f6c63430008000033", "deployedSourceMap": "247:2410:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:286;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1858:210;;;;;;;;;;;;;:::i;:::-;;1640:212;;;;;;;;;;;;;:::i;409:25::-;;;;;;;;;;;;;:::i;336:35::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;644:22::-;;;;;;;;;;;;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;580:34:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;377:26::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;;;;:::i;9576:207:2:-;;;;;;;;;;-1:-1:-1;9576:207:2;;;;;:::i;:::-;;:::i;620:18:6:-;;;;;;;;;;;;;:::i;1139:203::-;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;298:32:6:-;;;;;;;;;;-1:-1:-1;298:32:6;;;;;:::i;:::-;;:::i;1348:286::-;1395:7;1417:12;1439:15;;;;;;;;;-1:-1:-1;;;;;1439:15:6;-1:-1:-1;;;;;1439:31:6;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1414:58;;;;;;1482:21;1514:5;1523:6;1506:23;;;;:::i;:::-;1482:47;;1539:19;1586:13;1562:11;;1576:6;1562:20;;;;:::i;:::-;1561:38;;;;:::i;:::-;1539:60;-1:-1:-1;;;;1348:286:6;:::o;1858:210::-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1907:13:6::1;:48:::0;;-1:-1:-1;;;;1907:48:6::1;-1:-1:-1::0;;;1907:48:6::1;::::0;;2003:7:::1;::::0;2012:3:::1;::::0;-1:-1:-1;;1985:31:6::1;::::0;:17:::1;:31::i;:::-;1965:51;;2031:30;2051:9;2031:30;;;;;;:::i;:::-;;;;;;;;1318:1:0;1858:210:6:o:0;1640:212::-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1729:20:6::1;1712:13;::::0;-1:-1:-1;;;1712:13:6;::::1;;;:37;::::0;::::1;;;;-1:-1:-1::0;;;1712:37:6::1;;;;;;;;;;1691:110;;;;-1:-1:-1::0;;;1691:110:6::1;;;;;;;:::i;:::-;1811:13;:34:::0;;-1:-1:-1;;;;1811:34:6::1;::::0;;1640:212::o;409:25::-;;;;:::o;336:35::-;;;-1:-1:-1;;;;;336:35:6;;:::o;644:22::-;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;580:34:6:-;;;-1:-1:-1;;;580:34:6;;;;;:::o;377:26::-;;;;:::o;1036:85:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;:::o;9576:207:2:-;9668:10;-1:-1:-1;;;;;9682:14:2;9668:28;;9660:72;;;;-1:-1:-1;;;9660:72:2;;;;;;;:::i;:::-;9738:40;9756:9;9767:10;9738:17;:40::i;:::-;9576:207;;:::o;620:18:6:-;;;;:::o;1139:203::-;1206:18;1189:13;;-1:-1:-1;;;1189:13:6;;;;:35;;;;;;-1:-1:-1;;;1189:35:6;;;;;;;;;;1181:44;;;;;;1256:16;:14;:16::i;:::-;1243:9;:29;;1235:57;;;;-1:-1:-1;;;1235:57:6;;;;;;;:::i;:::-;1302:7;:33;;;;;;;-1:-1:-1;1302:33:6;;;;;;;;-1:-1:-1;;;;;;1302:33:6;1323:10;1302:33;;;1139:203::o;1918:198:0:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:0::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;298:32:6:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;298:32:6;;-1:-1:-1;298:32:6;:::o;640:96:1:-;719:10;640:96;:::o;7732:1020:2:-;7809:17;7834:4;-1:-1:-1;;;;;7834:20:2;;7855:14;7871:4;7888:8;6589:1;7877:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7834:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8152:15;8170:82;8187:8;6589:1;8228:4;8235:6;:16;8242:8;8235:16;;;;;;;;;;;;8170;:82::i;:::-;8682:6;:16;;;;;;;;;;;8152:100;;-1:-1:-1;8682:20:2;;8701:1;8682:20;:::i;:::-;8663:6;:16;;;;;;;;;;:39;8715:32;8670:8;8739:7;8715:13;:32::i;:::-;8708:39;7732:1020;-1:-1:-1;;;;7732:1020:2:o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;2074:581:6:-;2228:32;2211:13;;-1:-1:-1;;;2211:13:6;;;;:49;;;;;;-1:-1:-1;;;2211:49:6;;;;;;;;;;2190:117;;;;-1:-1:-1;;;2190:117:6;;;;;;;:::i;:::-;2339:1;2325:11;:15;2317:44;;;;-1:-1:-1;;;2317:44:6;;;;;;;:::i;:::-;2409:7;:14;2371:21;;2395:28;;:11;:28;:::i;:::-;2371:52;;2448:7;2456:13;2448:22;;;;;;-1:-1:-1;;;2448:22:6;;;;;;;;;;;;;;;;;;2433:12;:37;;-1:-1:-1;;;;;;2433:37:6;-1:-1:-1;;;;;2448:22:6;;;2433:37;;;;;2480:44;;:12;;;2502:21;2480:44;;;;;2502:21;;2480:44;2448:22;2480:44;2502:21;2480:12;:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2544:24:6;;;2566:1;2544:24;;;;;;;;;2534:34;;;:7;;:34;:::i;:::-;-1:-1:-1;;2578:13:6;:36;;-1:-1:-1;;;;2578:36:6;-1:-1:-1;;;2578:36:6;;;2624:10;:24;-1:-1:-1;2074:581:6:o;796:240:3:-;938:7;989:8;999:9;1010:10;1022:6;978:51;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;978:51:3;;;;;;;;;968:62;;978:51;968:62;;;;;796:240;-1:-1:-1;;;;;796:240:3:o;1416:166::-;1503:7;1552:8;1562:13;1535:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1525:52;;;;;;1518:59;;1416:166;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:181:7;94:13;;147:22;136:34;;126:45;;116:2;;185:1;182;175:12;116:2;75:120;;;:::o;200:306::-;;312:2;300:9;291:7;287:23;283:32;280:2;;;333:6;325;318:22;280:2;364:23;;-1:-1:-1;;;;;416:31:7;;406:42;;396:2;;467:6;459;452:22;396:2;495:5;270:236;-1:-1:-1;;;270:236:7:o;511:297::-;;631:2;619:9;610:7;606:23;602:32;599:2;;;652:6;644;637:22;599:2;689:9;683:16;742:5;735:13;728:21;721:5;718:32;708:2;;769:6;761;754:22;813:258;;;942:2;930:9;921:7;917:23;913:32;910:2;;;963:6;955;948:22;910:2;-1:-1:-1;;991:23:7;;;1061:2;1046:18;;;1033:32;;-1:-1:-1;900:171:7:o;1076:190::-;;1188:2;1176:9;1167:7;1163:23;1159:32;1156:2;;;1209:6;1201;1194:22;1156:2;-1:-1:-1;1237:23:7;;1146:120;-1:-1:-1;1146:120:7:o;1271:487::-;;;;;;1459:3;1447:9;1438:7;1434:23;1430:33;1427:2;;;1481:6;1473;1466:22;1427:2;1509:41;1540:9;1509:41;:::i;:::-;1499:51;;1590:2;1579:9;1575:18;1569:25;1559:35;;1634:2;1623:9;1619:18;1613:25;1603:35;;1678:2;1667:9;1663:18;1657:25;1647:35;;1701:51;1747:3;1736:9;1732:19;1701:51;:::i;:::-;1691:61;;1417:341;;;;;;;;:::o;1763:247::-;1920:19;;;1964:2;1955:12;;1948:28;2001:2;1992:12;;1910:100::o;2015:203::-;-1:-1:-1;;;;;2179:32:7;;;;2161:51;;2149:2;2134:18;;2116:102::o;2447:772::-;;2679:1;2675;2670:3;2666:11;2662:19;2654:6;2650:32;2639:9;2632:51;2702:2;2740:6;2735:2;2724:9;2720:18;2713:34;2783:2;2778;2767:9;2763:18;2756:30;2815:6;2809:13;2858:6;2853:2;2842:9;2838:18;2831:34;2883:4;2896:141;2910:6;2907:1;2904:13;2896:141;;;3006:14;;;3002:23;;2996:30;2971:17;;;2990:3;2967:27;2960:67;2925:10;;2896:141;;;3055:6;3052:1;3049:13;3046:2;;;3126:4;3120:3;3111:6;3100:9;3096:22;3092:32;3085:46;3046:2;-1:-1:-1;3202:2:7;3181:15;-1:-1:-1;;3177:29:7;3162:45;;;;3209:3;3158:55;;2622:597;-1:-1:-1;;;;;2622:597:7:o;3224:177::-;3370:25;;;3358:2;3343:18;;3325:76::o;3659:417::-;3890:25;;;3946:2;3931:18;;3924:34;;;;-1:-1:-1;;;;;3994:32:7;3989:2;3974:18;;3967:60;4058:2;4043:18;;4036:34;3877:3;3862:19;;3844:232::o;4081:344::-;4229:2;4214:18;;4262:1;4251:13;;4241:2;;4307:10;4302:3;4298:20;4295:1;4288:31;4342:4;4339:1;4332:15;4370:4;4367:1;4360:15;4241:2;4394:25;;;4196:229;:::o;4430:340::-;4632:2;4614:21;;;4671:2;4651:18;;;4644:30;-1:-1:-1;;;4705:2:7;4690:18;;4683:46;4761:2;4746:18;;4604:166::o;4775:339::-;4977:2;4959:21;;;5016:2;4996:18;;;4989:30;-1:-1:-1;;;5050:2:7;5035:18;;5028:45;5105:2;5090:18;;4949:165::o;5119:402::-;5321:2;5303:21;;;5360:2;5340:18;;;5333:30;5399:34;5394:2;5379:18;;5372:62;-1:-1:-1;;;5465:2:7;5450:18;;5443:36;5511:3;5496:19;;5293:228::o;5526:350::-;5728:2;5710:21;;;5767:2;5747:18;;;5740:30;5806:28;5801:2;5786:18;;5779:56;5867:2;5852:18;;5700:176::o;5881:356::-;6083:2;6065:21;;;6102:18;;;6095:30;6161:34;6156:2;6141:18;;6134:62;6228:2;6213:18;;6055:182::o;6242:355::-;6444:2;6426:21;;;6483:2;6463:18;;;6456:30;6522:33;6517:2;6502:18;;6495:61;6588:2;6573:18;;6416:181::o;6602:345::-;6804:2;6786:21;;;6843:2;6823:18;;;6816:30;-1:-1:-1;;;6877:2:7;6862:18;;6855:51;6938:2;6923:18;;6776:171::o;7134:128::-;;7205:1;7201:6;7198:1;7195:13;7192:2;;;7211:18;;:::i;:::-;-1:-1:-1;7247:9:7;;7182:80::o;7267:120::-;;7333:1;7323:2;;7338:18;;:::i;:::-;-1:-1:-1;7372:9:7;;7313:74::o;7392:168::-;;7498:1;7494;7490:6;7486:14;7483:1;7480:21;7475:1;7468:9;7461:17;7457:45;7454:2;;;7505:18;;:::i;:::-;-1:-1:-1;7545:9:7;;7444:116::o;7565:112::-;;7623:1;7613:2;;7628:18;;:::i;:::-;-1:-1:-1;7662:9:7;;7603:74::o;7682:127::-;7743:10;7738:3;7734:20;7731:1;7724:31;7774:4;7771:1;7764:15;7798:4;7795:1;7788:15;7814:127;7875:10;7870:3;7866:20;7863:1;7856:31;7906:4;7903:1;7896:15;7930:4;7927:1;7920:15", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "offset": [247, 2657], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81447999 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x24E JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x81447999 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x88AB139A EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x1F1 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x36013189 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x36013189 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x4F8C70CF EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x69EBE78E EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x190 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1593A8C7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x160344E2 EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x33D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x3E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x47F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x494 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x49A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xC02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x4F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x4FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0xAC1 JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x560 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x566 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0xAFA JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 PUSH5 0x2540BE400 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x335 SWAP2 SWAP1 PUSH2 0xDAD JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x356 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x3AA SWAP2 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E DUP2 PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FF PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x453 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4A2 PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4B3 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x4E3 PUSH1 0x0 PUSH2 0x7EE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x55C DUP3 DUP3 PUSH2 0x840 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x594 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A6 PUSH2 0x26E JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x611 PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x622 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x677 DUP2 PUSH2 0x7EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x70F SWAP3 SWAP2 SWAP1 PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78E SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7B0 DUP5 PUSH1 0x0 ADDRESS PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x96D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x7CD SWAP1 PUSH1 0x1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x7E6 DUP5 DUP3 PUSH2 0x9A7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x86E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C SWAP1 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x8BB SWAP1 DUP4 PUSH2 0xDE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x934 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0x952 SWAP2 PUSH1 0x2 SWAP2 PUSH2 0x9DA JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x5 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x986 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9BC SWAP3 SWAP2 SWAP1 PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xA2F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA2F JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x9FA JUMP JUMPDEST POP PUSH2 0xA3B SWAP3 SWAP2 POP PUSH2 0xA3F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA3B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA40 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA84 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA9A JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA9A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB11 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB1A DUP7 PUSH2 0xA54 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xB3D PUSH1 0x80 DUP8 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 MSTORE PUSH1 0x20 DUP5 DUP2 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0xB90 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBBD JUMPI DUP4 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x80 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xC24 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x1C985B991BDB57DB9BDD17D99BDD5B99 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x4E6F7420656E6F7567682045544821 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E27742073746172742061206C6F74746572792079657421000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x596F75206172656E27742074686572652079657421 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDA8 JUMPI PUSH2 0xDA8 PUSH2 0xDF4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDBC JUMPI PUSH2 0xDBC PUSH2 0xE0A JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xDDB JUMPI PUSH2 0xDDB PUSH2 0xDF4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDEF JUMPI PUSH2 0xDEF PUSH2 0xE0A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH27 0xFE0E885582F2D1319CB17E25BE2C5325D178540F5CEF094F6CEBF7 DUP13 GT 0xDB PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ", "sha1": "9fc7e2ebc574f000c453513186c0f607ea3d0c02", "source": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\n\ncontract Lottery is VRFConsumerBase, Ownable {\n    address payable[] public players;\n    address payable public recentWinner;\n    uint256 public usdEntryFee;\n    uint256 public randomness;\n    AggregatorV3Interface internal ethUsdPriceFeed;\n    enum LOTTERY_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n    LOTTERY_STATE public lottery_state;\n    uint256 public fee;\n    bytes32 public keyhash;\n    event RequestedRandomness(bytes32 requestId);\n\n    constructor(\n        address _priceFeedAddress,\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyhash\n    ) public VRFConsumerBase(_vrfCoordinator, _link) {\n        usdEntryFee = 50 * (10**18);\n        ethUsdPriceFeed = AggregatorV3Interface(_priceFeedAddress);\n        lottery_state = LOTTERY_STATE.CLOSED;\n        fee = _fee;\n        keyhash = _keyhash;\n    }\n\n    function enter() public payable {\n        require(lottery_state == LOTTERY_STATE.OPEN);\n        require(msg.value >= getEntranceFee(), \"Not enough ETH!\");\n        players.push(payable(msg.sender));\n    }\n\n    function getEntranceFee() public view returns (uint256) {\n        (, int256 price, , , ) = ethUsdPriceFeed.latestRoundData();\n        uint256 adjustedPrice = uint256(price) * 10**10;\n        uint256 costToEnter = (usdEntryFee * 10**18) / adjustedPrice;\n        return costToEnter;\n    }\n\n    function startLottery() public onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can't start a lottery yet!\"\n        );\n        lottery_state = LOTTERY_STATE.OPEN;\n    }\n\n    function endLottery() public onlyOwner {\n        lottery_state = LOTTERY_STATE.CALCULATING_WINNER;\n        bytes32 requestId = requestRandomness(keyhash, fee);\n        emit RequestedRandomness(requestId);\n    }\n\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n    {\n        require(\n            lottery_state == LOTTERY_STATE.CALCULATING_WINNER,\n            \"You aren't there yet!\"\n        );\n        require(_randomness > 0, \"random_not_found\");\n        uint256 indexOfWinner = _randomness % players.length;\n        recentWinner = players[indexOfWinner];\n        recentWinner.transfer(address(this).balance);\n        players = new address payable[](0);\n        lottery_state = LOTTERY_STATE.CLOSED;\n        randomness = _randomness;\n    }\n}\n", "sourceMap": "247:2410:6:-:0;;;723:410;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;9306:32:2;;;;;;;;9344;;;;;;921::0;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;951:13:6::1;937:11;:27:::0;974:15:::1;:58:::0;;-1:-1:-1;;;;;;974:58:6::1;-1:-1:-1::0;;;;;974:58:6;::::1;;::::0;;;-1:-1:-1;;974:15:6;-1:-1:-1;;;;1042:36:6::1;-1:-1:-1::0;;;;1042:36:6::1;;::::0;;-1:-1:-1;1088:3:6::1;:10:::0;;;;1108:7:::1;:18:::0;-1:-1:-1;247:2410:6;;-1:-1:-1;;247:2410:6;640:96:1;719:10;640:96;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;14:179:7:-;95:13;;-1:-1:-1;;;;;137:31:7;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:518::-;;;;;;389:3;377:9;368:7;364:23;360:33;357:2;;;411:6;403;396:22;357:2;439:42;471:9;439:42;:::i;:::-;429:52;;500:51;547:2;536:9;532:18;500:51;:::i;:::-;490:61;;570:51;617:2;606:9;602:18;570:51;:::i;:::-;661:2;646:18;;640:25;705:3;690:19;;;684:26;347:369;;;;-1:-1:-1;560:61:7;640:25;684:26;347:369;-1:-1:-1;;;347:369:7:o;:::-;247:2410:6;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/Lottery.sol", "type": "contract", "deployment": {"address": "0x13677aC82f7E8B66eACaD8CeAc45f0305f8cf551", "chainid": "4", "blockHeight": 10597812}}